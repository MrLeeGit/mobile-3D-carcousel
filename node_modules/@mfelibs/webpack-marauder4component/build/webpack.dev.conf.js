var utils = require('./utils')
var webpack = require('webpack')
var config = require('./config')
var merge = require('webpack-merge')
var baseWebpackConfig = require('./webpack.base.conf')
var HtmlWebpackPlugin = require('html-webpack-plugin')
var FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')
var glob = require('glob');
var path = require('path')
var cwd = process.cwd();
// add hot-reload related code to entry chunks
Object.keys(baseWebpackConfig.entry).forEach(function(name) {
    baseWebpackConfig.entry[name] = [path.resolve(__dirname, 'dev-client')].concat(baseWebpackConfig.entry[name])
})

var webpackConfig = {};
webpackConfig = merge(baseWebpackConfig, {
    module: {
        rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap })
    },
    // cheap-module-eval-source-map is faster for development
    devtool: '#cheap-module-eval-source-map',
    plugins: [
        new webpack.DefinePlugin({
            'process.env': config.dev.env
        }),
        // https://github.com/glenjamin/webpack-hot-middleware#installation--usage
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoEmitOnErrorsPlugin(),

        // https://github.com/ampedandwired/html-webpack-plugin
        // new HtmlWebpackPlugin({
        //     filename: 'index.html',
        //     template: 'index.html',
        //     inject: true,
        //     chunks: ['index']
        // }),
        // new HtmlWebpackPlugin({
        // 	filename: 'list.html',
        // 	template: 'list.html',
        // 	inject: true,
        // 	chunks: ['list']
        // }),
        new FriendlyErrorsPlugin()
    ]
})

var plugin = new HtmlWebpackPlugin({
    // 生成出来的html文件名
    filename: 'index.html',
    // 每个html的模版，这里多个页面使用同一个模版
    template: process.cwd() + '/index.html',
    minify: {
        removeComments: false,
        collapseWhitespace: false,
        removeAttributeQuotes: false
    },
    // 自动将引用插入html
    inject: true,
    favicon: false
        // ,
        // // 每个html引用的js模块，也可以在这里加上vendor等公用模块
        // chunks: ["index"]
});
webpackConfig.plugins.push(plugin);


module.exports = webpackConfig