var path = require('path')
var utils = require('./utils')
var config = require('./config')
var fs = require('fs');
var glob = require('glob');
var cwd = process.cwd();
var marauderConfig = require(path.resolve(cwd, 'marauder.config.js'))
var cwd = process.cwd();

function resolve(dir) {
    return path.join(cwd, '..', dir)
}
var ROOT_PATH = process.cwd();
// 获取指定路径下的入口文件
function getEntries(globPath) {
    var files = glob.sync(globPath),
        entries = {};
    files.forEach(function(filepath) {
        // 取倒数第二层(view下面的文件夹)做包名
        var split = filepath.split('/');
        var name = split[split.length - 2];
        entries[name] = './' + filepath;
    });
    return entries;
}

module.exports = {
    entry: "./test/index.js",
    output: {
        path: config.build.assetsRoot,
        filename: '[name].js',
        publicPath: process.env.NODE_ENV === 'production' ? config.build.assetsPublicPath : config.dev.assetsPublicPath
    },
    resolve: {
        extensions: ['.js', '.json'],
        modules: [
            path.resolve(cwd, 'src'),
            path.resolve(cwd, 'node_modules')
        ],
        alias: {
            'src': resolve('src')
        }
    },
    module: {
        loaders: [　　　　{　　　　　　 test: /\.html$/, 　　　　　　loader: 'html-withimg-loader'　　　　 }　　],
        rules: [{
                test: /\.ejs$/,
                loader: '@mfelibs/webpack-ejs-loader',
                include: [path.resolve(cwd, 'src'), path.resolve(cwd, 'test')]
            },
            {
                test: /\.js$/,
                loader: 'babel-loader'

                // include: [path.resolve(cwd, 'node_modules'), path.resolve(cwd, 'test')]
            }, {
                test: /\.(png|jpe?g|gif|svg)(\?.*)?$/,
                loader: 'url-loader',
                query: {
                    limit: 2000,
                    name: marauderConfig.hash ? utils.assetsPath('img/[name].[hash:7].[ext]') : utils.assetsPath('img/[name].[ext]')
                }
            }, {
                test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/,
                loader: 'url-loader',
                query: {
                    limit: 2000,
                    name: utils.assetsPath('fonts/[name].[hash:7].[ext]')
                }
            }
        ]
    }
}