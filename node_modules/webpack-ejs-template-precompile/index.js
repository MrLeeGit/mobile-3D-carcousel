"use strict";
var path = require("path");
var dirname = path.dirname;
var loaderUtils = require("loader-utils");
var ejs = require("./ejs");
var nodeResolve = require("resolve").sync;
module.exports = function(source) {

    this.cacheable && this.cacheable();
    // // var modulePaths = {};
    // // modulePaths.pug = require.resolve("ejs");
    // // modulePaths.load = nodeResolve("pug-load", { basedir: dirname(modulePaths.pug) });
    // // modulePaths.runtime = nodeResolve("pug-runtime", { basedir: dirname(modulePaths.pug) });
    // // var pug = require(modulePaths.pug);
    // // var load = require(modulePaths.load);
    var req = loaderUtils.getRemainingRequest(this).replace(/^!/, "");
    var query = loaderUtils.getLoaderConfig(this, "ejsLoader");

    var loadModule = this.loadModule;
    var resolve = this.resolve;

    var loaderContext = this;
    var callback;

    var fileContents = {};
    var filePaths = {};

    var missingFileMode = false;
    run();

    function run() {
        try {
            var tmplFunc = ejs.preBuildTemplate(source);
            console.log("正在解析:" + loaderContext.request);
            console.log("解析的模板结果为:" + tmplFunc)
        } catch (e) {
            console.error(loaderContext.request + "处理异常:" +
                e);
            if (missingFileMode) {
                // Ignore, it'll continue after async action
                missingFileMode = false;
                return;
            }
            loaderContext.callback(loaderContext.request + ":" +
                e);
            return;
        }
        loaderContext.callback(null, "module.exports = function(TemplateData){" + tmplFunc + "} ");
    }
}